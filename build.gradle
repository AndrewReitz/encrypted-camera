buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.0.+'
    }
}

// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0

apply plugin: 'android'
apply plugin: 'hugo'

repositories {
    mavenCentral()
    maven {
        url "http://JRAF.org/static/maven/2" // for android-switch-backport
    }
}

dependencies {
    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.google.guava:guava:16.0'
    compile 'com.jakewharton.timber:timber:2.1.+'
    compile 'com.jakewharton:butterknife:4.0.+'
    compile 'com.squareup:otto:1.3.+'
    compile 'com.intellij:annotations:12.0'
    compile 'com.squareup.dagger:dagger:1.2.0'
    compile "org.jraf:android-switch-backport:1.3"
    compile 'org.mindrot:jbcrypt:0.3m'

    provided 'com.squareup.dagger:dagger-compiler:1.2.0'
    debugCompile 'com.jakewharton.madge:madge:1.1.1'

    androidTestCompile 'org.mockito:mockito-core:1.9.5'
    androidTestCompile 'org.easytesting:fest-assert-core:2.0M10'
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile file(storeFilePath)
            storePassword keystorePassword
            keyAlias "encrypted-camera"
            keyPassword aliasKeyPassword
        }
    }

    buildTypes {
        debug {
            packageNameSuffix '.dev'
            versionNameSuffix '-dev'
        }

        release {
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }
}
